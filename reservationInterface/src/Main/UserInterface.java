package Main;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

public class UserInterface extends javax.swing.JFrame {

    public UserInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Home_page = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Home_title = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        Home_Description = new javax.swing.JTextArea();
        Offers_Page = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Offer_title = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        Offers_Description = new javax.swing.JTextArea();
        Hotel_Reservation_Page = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Hotel_Reserve_Title = new javax.swing.JTextPane();
        Room_Type_Select = new javax.swing.JComboBox<>();
        Lakeside_Select = new javax.swing.JComboBox<>();
        Beds_select = new javax.swing.JComboBox<>();
        Room_Type_text = new javax.swing.JTextField();
        Lakeside_text = new javax.swing.JTextField();
        Beds_text = new javax.swing.JTextField();
        Hotel_reserve_Button = new javax.swing.JToggleButton();
        Hotel_Year_select = new javax.swing.JComboBox<>();
        Hotel_day_select = new javax.swing.JComboBox<>();
        Hotel_month_select = new javax.swing.JComboBox<>();
        Hotel_date = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        Hotel_package_select = new javax.swing.JComboBox<>();
        Hotel_Name = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        Hotel_output = new javax.swing.JTextArea();
        Hotel_length_Text = new javax.swing.JTextField();
        Hotel_length_select = new javax.swing.JSpinner();
        Restaurant_Reservation_Page = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Restaurant_Reserve_Title = new javax.swing.JTextPane();
        Restaurant_guest_text = new javax.swing.JTextField();
        Restaurant_Date_text = new javax.swing.JTextField();
        Restaurant_month = new javax.swing.JComboBox<>();
        Restaurant_year = new javax.swing.JComboBox<>();
        Restaurant_reserve_button = new javax.swing.JToggleButton();
        Restaurant_Time_text = new javax.swing.JTextField();
        Restaurant_day = new javax.swing.JComboBox<>();
        Restaurant_hour = new javax.swing.JSpinner();
        Restaurant_minute = new javax.swing.JSpinner();
        Restaurant_AM_PM = new javax.swing.JComboBox<>();
        Restaurant_Name = new javax.swing.JFormattedTextField();
        Restaurant_Guest = new javax.swing.JSpinner();
        jScrollPane8 = new javax.swing.JScrollPane();
        Restaurant_output = new javax.swing.JTextArea();
        Check_Reseration_Page = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        Check_Reservation_Title = new javax.swing.JTextPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        Reservation_output = new javax.swing.JTextArea();
        Reservation_select = new javax.swing.JComboBox<>();
        Reservation_input = new javax.swing.JTextField();
        Reservation_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Home_page.setName(""); // NOI18N

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setEnabled(false);

        Home_title.setEditable(false);
        Home_title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Home_title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Home_title.setText("Lake Simcore Waterfront Resort");
        jScrollPane2.setViewportView(Home_title);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        Home_Description.setEditable(false);
        Home_Description.setColumns(20);
        Home_Description.setLineWrap(true);
        Home_Description.setRows(5);
        Home_Description.setText("On the shores of Lake Simcore, the Lake Simcore Waterfront Resort has been the best lakeside getaway destination for 27 years and counting. With 100 rooms and 20 suites available for guests year round, there's never a bad time to come down for a vacation. \n\nOur Resort has a host of on-site accommodations for our guests to use. This includes a cafeteria and a restaurant so no one goes hungry. These can be purchased as needed or as part of a package with a room. We own part of the beach to offer swimming and 2 beach volleyball courts during the summer. During the winter we make a skating rink on the lake for our guests to use.\n\nAnd as time is always moving forward, so are we with big plans for the future. A membership plan is currently being developed to give you better deals. Stay tuned for its launch and you might be eligible for even bigger discounts. And to ensure we can offer swimming year round a pool is planned to be installed by 2022. ");
        Home_Description.setWrapStyleWord(true);
        jScrollPane3.setViewportView(Home_Description);

        javax.swing.GroupLayout Home_pageLayout = new javax.swing.GroupLayout(Home_page);
        Home_page.setLayout(Home_pageLayout);
        Home_pageLayout.setHorizontalGroup(
            Home_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Home_pageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(Home_pageLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Home_pageLayout.setVerticalGroup(
            Home_pageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Home_pageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Home", Home_page);

        Offer_title.setEditable(false);
        Offer_title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Offer_title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Offer_title.setText("Offers");
        jScrollPane4.setViewportView(Offer_title);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        Offers_Description.setEditable(false);
        Offers_Description.setColumns(20);
        Offers_Description.setLineWrap(true);
        Offers_Description.setRows(5);
        Offers_Description.setText("Lake Simcore Waterfront Resort offers both 100 regular rooms and 20 suites for our guests, of which 30 rooms and 10 suites face the lake. Both types of rooms can be booked with 2 queen sized beds or 1 king sized bed. \n\nPricing is as follows:\n-Regular rooms: $180, with additional nights costing $20 less\n-Suite : $220, with additional nights costing $20 less\n-Lakeview +$30\n\nOur resort offers a few package deals to improve the quality of your stay: \n-Breakfast Plan, includes access to the cafeteria for breakfast, perfect for one night visits: +$20 a night\n-Meal Plan, includes full cafeteria access over your stay to make meal planning easy +$35 a night\n-Week long deal, if you stay for a week or longer weâ€™ll include a meal plan and a discount -$20 a night");
        Offers_Description.setWrapStyleWord(true);
        Offers_Description.setAutoscrolls(false);
        jScrollPane1.setViewportView(Offers_Description);

        javax.swing.GroupLayout Offers_PageLayout = new javax.swing.GroupLayout(Offers_Page);
        Offers_Page.setLayout(Offers_PageLayout);
        Offers_PageLayout.setHorizontalGroup(
            Offers_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Offers_PageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Offers_PageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(343, 343, 343))
        );
        Offers_PageLayout.setVerticalGroup(
            Offers_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Offers_PageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Offers", Offers_Page);

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane5.setEnabled(false);

        Hotel_Reserve_Title.setEditable(false);
        Hotel_Reserve_Title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Hotel_Reserve_Title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Hotel_Reserve_Title.setText("Hotel Reservations");
        jScrollPane5.setViewportView(Hotel_Reserve_Title);

        Room_Type_Select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select choice", "Regular $180/night", "Suite $220/night" }));

        Lakeside_Select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select choice", "No", "Yes +$30/Night" }));

        Beds_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select choice", "1 King sized bed", "2 Queen sized beds" }));

        Room_Type_text.setEditable(false);
        Room_Type_text.setText("Select your room type:");

        Lakeside_text.setEditable(false);
        Lakeside_text.setText("Lakeside view:");

        Beds_text.setEditable(false);
        Beds_text.setText("What beds do you want:");

        Hotel_reserve_Button.setText("Make Reservation");
        Hotel_reserve_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hotel_reserve_ButtonActionPerformed(evt);
            }
        });

        Hotel_Year_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2021", "2022", "2023", "2024" }));

        Hotel_day_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        Hotel_month_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        Hotel_date.setEditable(false);
        Hotel_date.setText("When do you want the room:");

        jTextField1.setEditable(false);
        jTextField1.setText("Are you getting any packages?");

        Hotel_package_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select choice", "None", "Breakfast plan +$20/night", "Meal plan +$35/night", "Week long stay -$20/night" }));

        Hotel_Name.setText("Enter your name here");

        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane6.setEnabled(false);
        jScrollPane6.setWheelScrollingEnabled(false);

        Hotel_output.setEditable(false);
        Hotel_output.setColumns(20);
        Hotel_output.setRows(5);
        Hotel_output.setAutoscrolls(false);
        jScrollPane6.setViewportView(Hotel_output);

        Hotel_length_Text.setEditable(false);
        Hotel_length_Text.setText("How long are you staying:");

        Hotel_length_select.setModel(new javax.swing.SpinnerNumberModel(1, 1, 29, 1));

        javax.swing.GroupLayout Hotel_Reservation_PageLayout = new javax.swing.GroupLayout(Hotel_Reservation_Page);
        Hotel_Reservation_Page.setLayout(Hotel_Reservation_PageLayout);
        Hotel_Reservation_PageLayout.setHorizontalGroup(
            Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Hotel_Reservation_PageLayout.createSequentialGroup()
                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Hotel_Reservation_PageLayout.createSequentialGroup()
                        .addContainerGap(245, Short.MAX_VALUE)
                        .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Hotel_reserve_Button)
                                .addGroup(Hotel_Reservation_PageLayout.createSequentialGroup()
                                    .addComponent(Hotel_length_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(Hotel_length_select, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(Hotel_Reservation_PageLayout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Hotel_package_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Hotel_Reservation_PageLayout.createSequentialGroup()
                                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Lakeside_text)
                                    .addComponent(Beds_text)
                                    .addComponent(Room_Type_text, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Lakeside_Select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Room_Type_Select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Beds_select, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(Hotel_Reservation_PageLayout.createSequentialGroup()
                                .addComponent(Hotel_date, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Hotel_month_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Hotel_day_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Hotel_Year_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 140, Short.MAX_VALUE))
                    .addGroup(Hotel_Reservation_PageLayout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(Hotel_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Hotel_Reservation_PageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Hotel_Reservation_PageLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Hotel_Reservation_PageLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(241, 241, 241))))
        );
        Hotel_Reservation_PageLayout.setVerticalGroup(
            Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Hotel_Reservation_PageLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Hotel_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Room_Type_Select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Room_Type_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lakeside_Select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lakeside_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Beds_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Beds_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hotel_package_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hotel_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hotel_month_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hotel_Year_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hotel_day_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Hotel_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hotel_length_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hotel_length_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(Hotel_reserve_Button)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reservations", Hotel_Reservation_Page);

        jScrollPane7.setEnabled(false);

        Restaurant_Reserve_Title.setEditable(false);
        Restaurant_Reserve_Title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Restaurant_Reserve_Title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Restaurant_Reserve_Title.setText("Restaurant Reservation");
        jScrollPane7.setViewportView(Restaurant_Reserve_Title);

        Restaurant_guest_text.setEditable(false);
        Restaurant_guest_text.setText("Number of guests");

        Restaurant_Date_text.setEditable(false);
        Restaurant_Date_text.setText("Date");

        Restaurant_month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        Restaurant_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2021", "2022", "2023", "2024" }));

        Restaurant_reserve_button.setText("Make Resevation");
        Restaurant_reserve_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Restaurant_reserve_buttonActionPerformed(evt);
            }
        });

        Restaurant_Time_text.setEditable(false);
        Restaurant_Time_text.setText("Time: ");

        Restaurant_day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        Restaurant_hour.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        Restaurant_minute.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        Restaurant_AM_PM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM/PM", "AM", "PM" }));

        Restaurant_Name.setText("Enter your name here");

        Restaurant_Guest.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane8.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane8.setEnabled(false);
        jScrollPane8.setHorizontalScrollBar(null);

        Restaurant_output.setEditable(false);
        Restaurant_output.setColumns(20);
        Restaurant_output.setRows(5);
        jScrollPane8.setViewportView(Restaurant_output);

        javax.swing.GroupLayout Restaurant_Reservation_PageLayout = new javax.swing.GroupLayout(Restaurant_Reservation_Page);
        Restaurant_Reservation_Page.setLayout(Restaurant_Reservation_PageLayout);
        Restaurant_Reservation_PageLayout.setHorizontalGroup(
            Restaurant_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Restaurant_Reservation_PageLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addGroup(Restaurant_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Restaurant_Reservation_PageLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(Restaurant_reserve_button))
                    .addGroup(Restaurant_Reservation_PageLayout.createSequentialGroup()
                        .addComponent(Restaurant_guest_text, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Restaurant_Guest, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Restaurant_Reservation_PageLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(Restaurant_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Restaurant_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Restaurant_Reservation_PageLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(Restaurant_hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Restaurant_minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(Restaurant_AM_PM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(Restaurant_Reservation_PageLayout.createSequentialGroup()
                        .addGroup(Restaurant_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Restaurant_Date_text)
                            .addComponent(Restaurant_Time_text, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                        .addGap(17, 17, 17)
                        .addComponent(Restaurant_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Restaurant_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Restaurant_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(307, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Restaurant_Reservation_PageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
        );
        Restaurant_Reservation_PageLayout.setVerticalGroup(
            Restaurant_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Restaurant_Reservation_PageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(Restaurant_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Restaurant_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Restaurant_guest_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurant_Guest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Restaurant_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Restaurant_Date_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurant_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurant_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurant_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Restaurant_Reservation_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Restaurant_Time_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurant_hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurant_minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurant_AM_PM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Restaurant_reserve_button)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Restaurant", Restaurant_Reservation_Page);

        jScrollPane9.setEnabled(false);

        Check_Reservation_Title.setEditable(false);
        Check_Reservation_Title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Check_Reservation_Title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Check_Reservation_Title.setText("Check Reservation");
        jScrollPane9.setViewportView(Check_Reservation_Title);

        Reservation_output.setEditable(false);
        Reservation_output.setColumns(20);
        Reservation_output.setRows(5);
        jScrollPane10.setViewportView(Reservation_output);

        Reservation_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select choice", "Hotel", "Restaurant" }));

        Reservation_input.setText("Enter your reservation number here");

        Reservation_button.setText("Check Reservation");
        Reservation_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reservation_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Check_Reseration_PageLayout = new javax.swing.GroupLayout(Check_Reseration_Page);
        Check_Reseration_Page.setLayout(Check_Reseration_PageLayout);
        Check_Reseration_PageLayout.setHorizontalGroup(
            Check_Reseration_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Check_Reseration_PageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Reservation_input, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(302, 302, 302))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Check_Reseration_PageLayout.createSequentialGroup()
                .addContainerGap(117, Short.MAX_VALUE)
                .addGroup(Check_Reseration_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Check_Reseration_PageLayout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(242, 242, 242))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Check_Reseration_PageLayout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))))
            .addGroup(Check_Reseration_PageLayout.createSequentialGroup()
                .addGroup(Check_Reseration_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Check_Reseration_PageLayout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(Reservation_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Check_Reseration_PageLayout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(Reservation_button)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Check_Reseration_PageLayout.setVerticalGroup(
            Check_Reseration_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Check_Reseration_PageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Reservation_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Reservation_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Reservation_button)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Check Reservation", Check_Reseration_Page);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //hotel variables
    public int price = 0;
    HotelReservation hr = new HotelReservation();

    private void Hotel_reserve_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hotel_reserve_ButtonActionPerformed
        //on button press check if valid info has been selected
        if (Room_Type_Select.getSelectedItem() != "Select choice" && Lakeside_Select.getSelectedItem() != "Select choice" && Beds_select.getSelectedItem() != "Select choice"
                && Hotel_month_select.getSelectedItem() != "Month" && Hotel_day_select.getSelectedItem() != "Day" && Hotel_Year_select.getSelectedItem() != "year"
                && Hotel_package_select.getSelectedItem() != "Select choice") {

            //calculating price of stay
            if (Room_Type_Select.getSelectedItem() == "Regular") {
                price = 180;
            } else {
                price = 220;
            }
            if (Lakeside_Select.getSelectedItem() == "Yes") {
                price += 30;
            }
            if (Hotel_package_select.getSelectedItem() == "Breakfast plan") {
                price += 20;
            } else if (Hotel_package_select.getSelectedItem() == "Meal plan") {
                price += 35;
            } else if (Hotel_package_select.getSelectedItem() == "Week long stay") {
                price -= 20;
            }
            price = price + (((int) Hotel_length_select.getValue() - 1) * (price - 20));

            String date1 = "";
            String date2 = "";
            String Hday = "";
            int dayselect = 0;

            try {
                dayselect = Integer.parseInt((String) Hotel_day_select.getSelectedItem());
            } catch (NumberFormatException ex) {
                ex.printStackTrace();
            }

            int num = dayselect + (int) Hotel_length_select.getValue();
            Hday = "" + num;
            if (num > 31) {
                num = num - 31;
                if (num < 10) {
                    Hday = "0" + num;
                }
            }

            if (Hotel_month_select.getSelectedItem() == "Jan") {
                date1 = Hotel_Year_select.getSelectedItem() + "-01-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-01-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Feb") {
                date1 = Hotel_Year_select.getSelectedItem() + "-02-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-02-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Mar") {
                date1 = Hotel_Year_select.getSelectedItem() + "-03-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-03-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Apr") {
                date1 = Hotel_Year_select.getSelectedItem() + "-04-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-04-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "May") {
                date1 = Hotel_Year_select.getSelectedItem() + "-05-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-05-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Jun") {
                date1 = Hotel_Year_select.getSelectedItem() + "-06-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-06-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Jul") {
                date1 = Hotel_Year_select.getSelectedItem() + "-07-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-07-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Aug") {
                date1 = Hotel_Year_select.getSelectedItem() + "-08-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-08-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Sep") {
                date1 = Hotel_Year_select.getSelectedItem() + "-09-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-09-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Oct") {
                date1 = Hotel_Year_select.getSelectedItem() + "-10-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-10-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Nov") {
                date1 = Hotel_Year_select.getSelectedItem() + "-11-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-11-" + Hday;
            } else if (Hotel_month_select.getSelectedItem() == "Dec") {
                date1 = Hotel_Year_select.getSelectedItem() + "-12-" + Hotel_day_select.getSelectedItem();
                date2 = Hotel_Year_select.getSelectedItem() + "-12-" + Hday;
            }

            //if all info valid then store all currently selected data
            hr.set(Hotel_Name.getText(), (String) Room_Type_Select.getSelectedItem(), (String) Lakeside_Select.getSelectedItem(),
                    (String) Beds_select.getSelectedItem(), (String) Hotel_package_select.getSelectedItem(),
                    (String) Hotel_month_select.getSelectedItem() + " " + (String) Hotel_day_select.getSelectedItem() + " " + (String) Hotel_Year_select.getSelectedItem(),
                    "" + Hotel_length_select.getValue(), "$" + price);

            //all code adapted from: https://docs.oracle.com/javase/tutorial/jdbc/basics/retrieving.html
            int id = 0;
            try {
                Connection connection = DriverManager.getConnection("jdbc:mysql://db4free.net:3306/hotelproject3415", "jamsquanch", "Goodpassword");
                Statement statement = connection.createStatement();
                ResultSet rs = statement.executeQuery("SELECT MAX(reservation_id) FROM reservation");
                while (rs.next()) {
                    id = rs.getInt(1);
                }
                id += 1;
                System.out.println(id);
                hr.setHRNum(id);

                connection.setAutoCommit(false);

                PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO reservation VALUES( " + "?,?,?,?,?)");

                preparedStatement.setInt(1, id);
                preparedStatement.setString(2, date1);
                preparedStatement.setString(3, date2);
                preparedStatement.setInt(4, 1);
                preparedStatement.setInt(5, 1);
                preparedStatement.addBatch();

                int[] updateCounts = preparedStatement.executeBatch();
                connection.commit();
                connection.setAutoCommit(true);
                connection.close();

            } catch (SQLException b) {
                System.out.println(b);
            }

            //display proper storage and a code to check reservation
            Hotel_output.setText("Succcessful Reservation \nTotal Price: $" + price + " \nReservation number: " + id);
            hr.print();

        } else {
            //if any info is invalid inform user
            Hotel_output.setText("Error Invalid entry");
        }
    }//GEN-LAST:event_Hotel_reserve_ButtonActionPerformed

    //restaurant variables
    public int RRnum = 127;
    RestaurantReservation rr = new RestaurantReservation();

    private void Restaurant_reserve_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Restaurant_reserve_buttonActionPerformed
        //on button press check if valid info has been selected
        if (Restaurant_month.getSelectedItem() != "Month" && Restaurant_day.getSelectedItem() != "Day"
                && Restaurant_year.getSelectedItem() != "Year" && Restaurant_AM_PM.getSelectedItem() != "AM/PM") {

            //ensuring time will be displayed/store correctly
            String minute = "-1";
            if ((int) Restaurant_minute.getValue() < 10) {
                minute = "0" + Restaurant_minute.getValue();
            } else {
                minute = (String) Restaurant_minute.getValue();
            }

            //if all info valid then store all currently selectedRRnum+1,
            rr.set( Restaurant_Name.getText(), "" + Restaurant_Guest.getValue(),
                    (String) Restaurant_month.getSelectedItem() + " " + (String) Restaurant_day.getSelectedItem() + " " + (String) Restaurant_year.getSelectedItem(),
                    Restaurant_hour.getValue() + ":" + Restaurant_minute.getValue() + (String) Restaurant_AM_PM.getSelectedItem());

            //display proper storage and a code to check reservation
            Restaurant_output.setText("Succcessful Reservation \nReservation number: 0001");

        } else {
            //if any info is invalid inform user
            Restaurant_output.setText("Error Invalid entry");
        }
    }//GEN-LAST:event_Restaurant_reserve_buttonActionPerformed

    private void Reservation_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reservation_buttonActionPerformed
        if (Reservation_select.getSelectedItem() == "Hotel") {
            Reservation_output.setText(hr.print());
        } else if (Reservation_select.getSelectedItem() == "Restaurant") {
            Reservation_output.setText(rr.print());
        } else if (Reservation_select.getSelectedItem() == "Select choice") {
            Reservation_output.setText("error");
        }
    }//GEN-LAST:event_Reservation_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Beds_select;
    private javax.swing.JTextField Beds_text;
    private javax.swing.JPanel Check_Reseration_Page;
    private javax.swing.JTextPane Check_Reservation_Title;
    private javax.swing.JTextArea Home_Description;
    private javax.swing.JPanel Home_page;
    private javax.swing.JTextPane Home_title;
    private javax.swing.JTextField Hotel_Name;
    private javax.swing.JPanel Hotel_Reservation_Page;
    private javax.swing.JTextPane Hotel_Reserve_Title;
    private javax.swing.JComboBox<String> Hotel_Year_select;
    private javax.swing.JTextField Hotel_date;
    private javax.swing.JComboBox<String> Hotel_day_select;
    private javax.swing.JTextField Hotel_length_Text;
    private javax.swing.JSpinner Hotel_length_select;
    private javax.swing.JComboBox<String> Hotel_month_select;
    private javax.swing.JTextArea Hotel_output;
    private javax.swing.JComboBox<String> Hotel_package_select;
    private javax.swing.JToggleButton Hotel_reserve_Button;
    private javax.swing.JComboBox<String> Lakeside_Select;
    private javax.swing.JTextField Lakeside_text;
    private javax.swing.JTextPane Offer_title;
    private javax.swing.JTextArea Offers_Description;
    private javax.swing.JPanel Offers_Page;
    private javax.swing.JButton Reservation_button;
    private javax.swing.JTextField Reservation_input;
    private javax.swing.JTextArea Reservation_output;
    private javax.swing.JComboBox<String> Reservation_select;
    private javax.swing.JComboBox<String> Restaurant_AM_PM;
    private javax.swing.JTextField Restaurant_Date_text;
    private javax.swing.JSpinner Restaurant_Guest;
    private javax.swing.JFormattedTextField Restaurant_Name;
    private javax.swing.JPanel Restaurant_Reservation_Page;
    private javax.swing.JTextPane Restaurant_Reserve_Title;
    private javax.swing.JTextField Restaurant_Time_text;
    private javax.swing.JComboBox<String> Restaurant_day;
    private javax.swing.JTextField Restaurant_guest_text;
    private javax.swing.JSpinner Restaurant_hour;
    private javax.swing.JSpinner Restaurant_minute;
    private javax.swing.JComboBox<String> Restaurant_month;
    private javax.swing.JTextArea Restaurant_output;
    private javax.swing.JToggleButton Restaurant_reserve_button;
    private javax.swing.JComboBox<String> Restaurant_year;
    private javax.swing.JComboBox<String> Room_Type_Select;
    private javax.swing.JTextField Room_Type_text;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
